name: CI/CD Pipeline

# Triggers for the workflow include any push event that does not affect branches prefixed with 'dependabot/'
# and any pull request to any branch in the repository.
on:
  push:
    branches-ignore:
      - 'dependabot/**'
    paths-ignore:
      - '**/*.md'

  pull_request:
    branches:
      - '**'
    paths-ignore:
      - '**/*.md'

# Manage concurrency to prevent multiple instances of the workflow from running simultaneously on the same branch.
# If a new run starts, it cancels any currently running instance.
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

# Set default permissions to read-only to enhance security.
permissions: read-all

jobs:
  get-python-versions:
    name: Get Python Versions
    runs-on: ubuntu-latest
    outputs:
      version-matrix: ${{ steps.get-language-versions.outputs.latest-versions }}
    steps:
      - uses: ActionsToolbox/get-language-versions-action@446919617fd774095b5dd3ed71c39dd3fd0d8f4f # v0.1.3
        id: get-language-versions
        with:
          language: "python"
          max-versions: 3

  # Always included to handle check-jobs.sh
  shellcheck:
    name: ShellCheck
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - name: Run Shellcheck
        run: bash <(curl -s https://raw.githubusercontent.com/CICDToolbox/shellcheck/master/pipeline.sh)

  json-lint:
    name: JSON Lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - name: Run JSON Lint
        run: bash <(curl -s https://raw.githubusercontent.com/CICDToolbox/json-lint/master/pipeline.sh)

  bandit:
    name: Bandit
    needs: get-python-versions
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-versions: ${{ fromJson(needs.get-python-versions.outputs.version-matrix) }}
    steps:
      - name: Checkout the repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683
      - name: Set up Python ${{ matrix.python-versions }}
        uses: actions/setup-python@e797f83bcb11b83ae66e0230d6156d7c80228e7c # v6.0.0
        with:
          python-version: ${{ matrix.python-versions }}
      - name: Run Bandit
        run: bash <(curl -s https://raw.githubusercontent.com/CICDToolbox/bandit/master/pipeline.sh)

  pur:
    name: Pur
    needs: get-python-versions
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-versions: ${{ fromJson(needs.get-python-versions.outputs.version-matrix) }}
    steps:
      - name: Checkout the repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - name: Set up Python ${{ matrix.python-versions }}
        uses: actions/setup-python@e797f83bcb11b83ae66e0230d6156d7c80228e7c # v6.0.0
        with:
          python-version: ${{ matrix.python-versions }}
      - name: Run Pur
        run: bash <(curl -s https://raw.githubusercontent.com/CICDToolbox/pur/master/pipeline.sh)

  pycodestyle:
    name: Pycodestyle
    needs: get-python-versions
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-versions: ${{ fromJson(needs.get-python-versions.outputs.version-matrix) }}
    steps:
      - name: Checkout the repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - name: Set up Python ${{ matrix.python-versions }}
        uses: actions/setup-python@e797f83bcb11b83ae66e0230d6156d7c80228e7c # v6.0.0
        with:
          python-version: ${{ matrix.python-versions }}
      - name: Run Pycodestyle
        run: bash <(curl -s https://raw.githubusercontent.com/CICDToolbox/pycodestyle/master/pipeline.sh)

  pydocstyle:
    name: Pydocstyle
    needs: get-python-versions
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-versions: ${{ fromJson(needs.get-python-versions.outputs.version-matrix) }}
    steps:
      - name: Checkout the repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - name: Set up Python ${{ matrix.python-versions }}
        uses: actions/setup-python@e797f83bcb11b83ae66e0230d6156d7c80228e7c # v6.0.0
        with:
          python-version: ${{ matrix.python-versions }}
      - name: Run Pydocstyle
        run: bash <(curl -s https://raw.githubusercontent.com/CICDToolbox/pydocstyle/master/pipeline.sh)

  pylama:
    name: Pylama
    needs: get-python-versions
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-versions: ${{ fromJson(needs.get-python-versions.outputs.version-matrix) }}
    steps:
      - name: Checkout the repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - name: Set up Python ${{ matrix.python-versions }}
        uses: actions/setup-python@e797f83bcb11b83ae66e0230d6156d7c80228e7c # v6.0.0
        with:
          python-version: ${{ matrix.python-versions }}
      - name: Run Pylama
        run: bash <(curl -s https://raw.githubusercontent.com/CICDToolbox/pylama/master/pipeline.sh)

  pylint:
    name: Pylint
    needs: get-python-versions
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-versions: ${{ fromJson(needs.get-python-versions.outputs.version-matrix) }}
    steps:
      - name: Checkout the repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - name: Set up Python ${{ matrix.python-versions }}
        uses: actions/setup-python@e797f83bcb11b83ae66e0230d6156d7c80228e7c # v6.0.0
        with:
          python-version: ${{ matrix.python-versions }}
      - name: Run Pylint
        run: bash <(curl -s https://raw.githubusercontent.com/CICDToolbox/pylint/master/pipeline.sh)

  cicd-pipeline:
    if: always()  # This ensures the job runs regardless of the results of previous jobs.
    name: CI/CD Pipeline
    needs:
      - shellcheck
      - json-lint
      - bandit
      - pur
      - pycodestyle
      - pydocstyle
      - pylama
      - pylint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - name: Check Job Statuses
        run: .github/scripts/check-jobs.sh '${{ toJson(needs) }}'
